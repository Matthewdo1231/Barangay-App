// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

enum Roles {
  admin
  user
}

model User {
  id         String      @id // Clerk userId
  firstName  String
  lastName   String
  email      String      @unique
  role       Roles       @default(user)
  createdAt  DateTime    @default(now())
  applicants Applicant[]
  requests   Request[] 
}

model News {
  id        String   @id @default(cuid())
  caption   String
  imageUrl  String
  createdAt DateTime @default(now())
}

model JobPosting {
  id          Int           @id @default(autoincrement())
  title       String
  address     String
  description String
  salary      Int
  createdAt   DateTime      @default(now())
  applicants  Applicant[]
}

model Applicant {
  id         Int        @id @default(autoincrement())
  jobId      Int
  userId     String
  name       String
  resumeUrl  String
  appliedAt  DateTime   @default(now())

  job        JobPosting @relation(fields: [jobId], references: [id], onDelete: Cascade)
  user       User       @relation(fields: [userId], references: [id])
}

enum RequestType {
  BARANGAY_CLEARANCE
  CERTIFICATE_RESIDENCY
  BARANGAY_BUSINESS_CLEARANCE
  TRANSFER_RESIDENCY
  BARANGAY_BLOTTER_ENTRY
  REQUEST_WATER_BILL
  REQUEST_WATER_SERVICE_CONNECTION
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
  IN_PROGRESS
  COMPLETED
}

model Request {
  id             Int           @id @default(autoincrement())
  userId         String
  fullName       String
  dateOfBirth    DateTime
  gender         String
  contactNumber  String
  emailAddress   String
  currentAddress String
  validIdType    String
  validIdUrl     String
  requestType    RequestType
  status         RequestStatus @default(PENDING)
  message        String?
  fileUrl        String?
  details        Json?        

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  user           User          @relation(fields: [userId], references: [id])
}

